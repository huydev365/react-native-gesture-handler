{"version":3,"sources":["NativeViewGestureHandler.ts"],"names":["nativeViewGestureHandlerProps","nativeViewProps","baseGestureHandlerProps","nativeViewHandlerName","NativeViewGestureHandler","name","allowedProps","config"],"mappings":";;;;;;;AAAA;;AACA;;;;AAKO,MAAMA,6BAA6B,GAAG,CAC3C,uBAD2C,EAE3C,sBAF2C,CAAtC;;AAgCA,MAAMC,eAAe,GAAG,CAC7B,GAAGC,6CAD0B,EAE7B,GAAGF,6BAF0B,CAAxB;;AAKA,MAAMG,qBAAqB,GAAG,0BAA9B;;AAGP;AACO,MAAMC,wBAAwB,GAAG,4BAGtC;AACAC,EAAAA,IAAI,EAAEF,qBADN;AAEAG,EAAAA,YAAY,EAAEL,eAFd;AAGAM,EAAAA,MAAM,EAAE;AAHR,CAHsC,CAAjC","sourcesContent":["import createHandler from './createHandler';\r\nimport {\r\n  BaseGestureHandlerProps,\r\n  baseGestureHandlerProps,\r\n} from './gestureHandlerCommon';\r\n\r\nexport const nativeViewGestureHandlerProps = [\r\n  'shouldActivateOnStart',\r\n  'disallowInterruption',\r\n] as const;\r\n\r\nexport interface NativeViewGestureConfig {\r\n  /**\r\n   * Android only.\r\n   *\r\n   * Determines whether the handler should check for an existing touch event on\r\n   * instantiation.\r\n   */\r\n  shouldActivateOnStart?: boolean;\r\n\r\n  /**\r\n   * When `true`, cancels all other gesture handlers when this\r\n   * `NativeViewGestureHandler` receives an `ACTIVE` state event.\r\n   */\r\n  disallowInterruption?: boolean;\r\n}\r\n\r\nexport interface NativeViewGestureHandlerProps\r\n  extends BaseGestureHandlerProps<NativeViewGestureHandlerPayload>,\r\n    NativeViewGestureConfig {}\r\n\r\nexport type NativeViewGestureHandlerPayload = {\r\n  /**\r\n   * True if gesture was performed inside of containing view, false otherwise.\r\n   */\r\n  pointerInside: boolean;\r\n};\r\n\r\nexport const nativeViewProps = [\r\n  ...baseGestureHandlerProps,\r\n  ...nativeViewGestureHandlerProps,\r\n] as const;\r\n\r\nexport const nativeViewHandlerName = 'NativeViewGestureHandler';\r\n\r\nexport type NativeViewGestureHandler = typeof NativeViewGestureHandler;\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\r\nexport const NativeViewGestureHandler = createHandler<\r\n  NativeViewGestureHandlerProps,\r\n  NativeViewGestureHandlerPayload\r\n>({\r\n  name: nativeViewHandlerName,\r\n  allowedProps: nativeViewProps,\r\n  config: {},\r\n});\r\n"]}