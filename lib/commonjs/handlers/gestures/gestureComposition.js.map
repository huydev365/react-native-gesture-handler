{"version":3,"sources":["gestureComposition.ts"],"names":["extendRelation","currentRelation","extendWith","undefined","ComposedGesture","Gesture","constructor","gestures","prepareSingleGesture","gesture","simultaneousGestures","requireGesturesToFail","BaseGesture","newConfig","config","simultaneousWith","requireToFail","prepare","initialize","toGestureArray","flatMap","SimultaneousGesture","simultaneousArray","concat","ExclusiveGesture","gestureArrays","map","i","length"],"mappings":"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","sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\r\n\r\nfunction extendRelation(\r\n  currentRelation: GestureRef[] | undefined,\r\n  extendWith: GestureType[]\r\n) {\r\n  if (currentRelation === undefined) {\r\n    return [...extendWith];\r\n  } else {\r\n    return [...currentRelation, ...extendWith];\r\n  }\r\n}\r\n\r\nexport class ComposedGesture extends Gesture {\r\n  protected gestures: Gesture[] = [];\r\n  protected simultaneousGestures: GestureType[] = [];\r\n  protected requireGesturesToFail: GestureType[] = [];\r\n\r\n  constructor(...gestures: Gesture[]) {\r\n    super();\r\n    this.gestures = gestures;\r\n  }\r\n\r\n  protected prepareSingleGesture(\r\n    gesture: Gesture,\r\n    simultaneousGestures: GestureType[],\r\n    requireGesturesToFail: GestureType[]\r\n  ) {\r\n    if (gesture instanceof BaseGesture) {\r\n      const newConfig = { ...gesture.config };\r\n\r\n      newConfig.simultaneousWith = extendRelation(\r\n        newConfig.simultaneousWith,\r\n        simultaneousGestures\r\n      );\r\n      newConfig.requireToFail = extendRelation(\r\n        newConfig.requireToFail,\r\n        requireGesturesToFail\r\n      );\r\n\r\n      gesture.config = newConfig;\r\n    } else if (gesture instanceof ComposedGesture) {\r\n      gesture.simultaneousGestures = simultaneousGestures;\r\n      gesture.requireGesturesToFail = requireGesturesToFail;\r\n      gesture.prepare();\r\n    }\r\n  }\r\n\r\n  prepare() {\r\n    for (const gesture of this.gestures) {\r\n      this.prepareSingleGesture(\r\n        gesture,\r\n        this.simultaneousGestures,\r\n        this.requireGesturesToFail\r\n      );\r\n    }\r\n  }\r\n\r\n  initialize() {\r\n    for (const gesture of this.gestures) {\r\n      gesture.initialize();\r\n    }\r\n  }\r\n\r\n  toGestureArray(): GestureType[] {\r\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\r\n  }\r\n}\r\n\r\nexport class SimultaneousGesture extends ComposedGesture {\r\n  prepare() {\r\n    const simultaneousArray = this.gestures\r\n      .flatMap((gesture) => gesture.toGestureArray())\r\n      .concat(this.simultaneousGestures);\r\n\r\n    for (const gesture of this.gestures) {\r\n      this.prepareSingleGesture(\r\n        gesture,\r\n        simultaneousArray,\r\n        this.requireGesturesToFail\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport class ExclusiveGesture extends ComposedGesture {\r\n  prepare() {\r\n    const gestureArrays = this.gestures.map((gesture) =>\r\n      gesture.toGestureArray()\r\n    );\r\n\r\n    let requireToFail: GestureType[] = [];\r\n\r\n    for (let i = 0; i < this.gestures.length; i++) {\r\n      this.prepareSingleGesture(\r\n        this.gestures[i],\r\n        this.simultaneousGestures,\r\n        this.requireGesturesToFail.concat(requireToFail)\r\n      );\r\n\r\n      requireToFail = requireToFail.concat(gestureArrays[i]);\r\n    }\r\n  }\r\n}\r\n\r\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\r\nexport type RaceGestureType = ComposedGestureType;\r\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\r\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\r\n"]}