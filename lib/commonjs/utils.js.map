{"version":3,"sources":["utils.ts"],"names":["toArray","object","Array","isArray","withPrevAndCurrent","array","mapFn","previousArr","currentArr","transformedArr","forEach","current","i","previous","transformed","push","hasProperty","key","Object","prototype","hasOwnProperty","call","isJestEnv","process","env","JEST_WORKER_ID"],"mappings":";;;;;;;;;;AAAO,SAASA,OAAT,CAAoBC,MAApB,EAA0C;AAC/C,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAL,EAA4B;AAC1B,WAAO,CAACA,MAAD,CAAP;AACD;;AAED,SAAOA,MAAP;AACD;;AAMM,SAASG,kBAAT,CACLC,KADK,EAELC,KAFK,EAGU;AACf,QAAMC,WAAmC,GAAG,CAAC,IAAD,CAA5C;AACA,QAAMC,UAAU,GAAG,CAAC,GAAGH,KAAJ,CAAnB;AACA,QAAMI,cAA6B,GAAG,EAAtC;AACAD,EAAAA,UAAU,CAACE,OAAX,CAAmB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACjC,UAAMC,QAAQ,GAAGN,WAAW,CAACK,CAAD,CAA5B;AACA,UAAME,WAAW,GAAGR,KAAK,CAACO,QAAD,EAAWF,OAAX,CAAzB;AACAJ,IAAAA,WAAW,CAACQ,IAAZ,CAAiBD,WAAjB;AACAL,IAAAA,cAAc,CAACM,IAAf,CAAoBD,WAApB;AACD,GALD;AAMA,SAAOL,cAAP;AACD;;AAEM,SAASO,WAAT,CAAqBf,MAArB,EAAsDgB,GAAtD,EAAmE;AACxE,SAAOC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCpB,MAArC,EAA6CgB,GAA7C,CAAP;AACD;;AAEM,SAASK,SAAT,GAA8B;AACnC,SAAO,CAAC,CAACC,OAAO,CAACC,GAAR,CAAYC,cAArB;AACD","sourcesContent":["export function toArray<T>(object: T | T[]): T[] {\r\n  if (!Array.isArray(object)) {\r\n    return [object];\r\n  }\r\n\r\n  return object;\r\n}\r\n\r\nexport type withPrevAndCurrentMapFn<T, Transformed> = (\r\n  previous: Transformed | null,\r\n  current: T\r\n) => Transformed;\r\nexport function withPrevAndCurrent<T, Transformed>(\r\n  array: T[],\r\n  mapFn: withPrevAndCurrentMapFn<T, Transformed>\r\n): Transformed[] {\r\n  const previousArr: (null | Transformed)[] = [null];\r\n  const currentArr = [...array];\r\n  const transformedArr: Transformed[] = [];\r\n  currentArr.forEach((current, i) => {\r\n    const previous = previousArr[i];\r\n    const transformed = mapFn(previous, current);\r\n    previousArr.push(transformed);\r\n    transformedArr.push(transformed);\r\n  });\r\n  return transformedArr;\r\n}\r\n\r\nexport function hasProperty(object: Record<string, unknown>, key: string) {\r\n  return Object.prototype.hasOwnProperty.call(object, key);\r\n}\r\n\r\nexport function isJestEnv(): boolean {\r\n  return !!process.env.JEST_WORKER_ID;\r\n}\r\n"]}