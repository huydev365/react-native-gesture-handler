{"version":3,"sources":["handlersRegistry.ts"],"names":["isJestEnv","handlerIDToTag","handlers","Map","testIDs","handlerTag","getNextHandlerTag","registerHandler","handler","testID","set","unregisterHandler","delete","findHandler","get","findHandlerByTestID","undefined"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AAGA,OAAO,MAAMC,cAAsC,GAAG,EAA/C;AACP,MAAMC,QAAQ,GAAG,IAAIC,GAAJ,EAAjB;AACA,MAAMC,OAAO,GAAG,IAAID,GAAJ,EAAhB;AAEA,IAAIE,UAAU,GAAG,CAAjB;AAEA,OAAO,SAASC,iBAAT,GAAqC;AAC1C,SAAOD,UAAU,EAAjB;AACD;AAED,OAAO,SAASE,eAAT,CACLF,UADK,EAELG,OAFK,EAGLC,MAHK,EAIL;AACAP,EAAAA,QAAQ,CAACQ,GAAT,CAAaL,UAAb,EAAyBG,OAAzB;;AACA,MAAIR,SAAS,MAAMS,MAAnB,EAA2B;AACzBL,IAAAA,OAAO,CAACM,GAAR,CAAYD,MAAZ,EAAoBJ,UAApB;AACD;AACF;AAED,OAAO,SAASM,iBAAT,CAA2BN,UAA3B,EAA+CI,MAA/C,EAAgE;AACrEP,EAAAA,QAAQ,CAACU,MAAT,CAAgBP,UAAhB;;AACA,MAAIL,SAAS,MAAMS,MAAnB,EAA2B;AACzBL,IAAAA,OAAO,CAACQ,MAAR,CAAeH,MAAf;AACD;AACF;AAED,OAAO,SAASI,WAAT,CAAqBR,UAArB,EAAyC;AAC9C,SAAOH,QAAQ,CAACY,GAAT,CAAaT,UAAb,CAAP;AACD;AAED,OAAO,SAASU,mBAAT,CAA6BN,MAA7B,EAA6C;AAClD,QAAMJ,UAAU,GAAGD,OAAO,CAACU,GAAR,CAAYL,MAAZ,CAAnB;;AACA,MAAIJ,UAAU,KAAKW,SAAnB,EAA8B;AAAA;;AAC5B,2BAAOH,WAAW,CAACR,UAAD,CAAlB,uDAAkC,IAAlC;AACD;;AACD,SAAO,IAAP;AACD","sourcesContent":["import { isJestEnv } from '../utils';\r\nimport { GestureType } from './gestures/gesture';\r\n\r\nexport const handlerIDToTag: Record<string, number> = {};\r\nconst handlers = new Map<number, GestureType>();\r\nconst testIDs = new Map<string, number>();\r\n\r\nlet handlerTag = 1;\r\n\r\nexport function getNextHandlerTag(): number {\r\n  return handlerTag++;\r\n}\r\n\r\nexport function registerHandler(\r\n  handlerTag: number,\r\n  handler: GestureType,\r\n  testID?: string\r\n) {\r\n  handlers.set(handlerTag, handler);\r\n  if (isJestEnv() && testID) {\r\n    testIDs.set(testID, handlerTag);\r\n  }\r\n}\r\n\r\nexport function unregisterHandler(handlerTag: number, testID?: string) {\r\n  handlers.delete(handlerTag);\r\n  if (isJestEnv() && testID) {\r\n    testIDs.delete(testID);\r\n  }\r\n}\r\n\r\nexport function findHandler(handlerTag: number) {\r\n  return handlers.get(handlerTag);\r\n}\r\n\r\nexport function findHandlerByTestID(testID: string) {\r\n  const handlerTag = testIDs.get(testID);\r\n  if (handlerTag !== undefined) {\r\n    return findHandler(handlerTag) ?? null;\r\n  }\r\n  return null;\r\n}\r\n"]}