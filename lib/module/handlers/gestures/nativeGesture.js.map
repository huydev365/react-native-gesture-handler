{"version":3,"sources":["nativeGesture.ts"],"names":["BaseGesture","NativeGesture","constructor","handlerName","shouldActivateOnStart","value","config","disallowInterruption"],"mappings":";;AAAA,SAA4BA,WAA5B,QAA+C,WAA/C;AAMA,OAAO,MAAMC,aAAN,SAA4BD,WAA5B,CAAyE;AAG9EE,EAAAA,WAAW,GAAG;AACZ;;AADY,oCAF+C,EAE/C;;AAGZ,SAAKC,WAAL,GAAmB,0BAAnB;AACD;;AAEDC,EAAAA,qBAAqB,CAACC,KAAD,EAAiB;AACpC,SAAKC,MAAL,CAAYF,qBAAZ,GAAoCC,KAApC;AACA,WAAO,IAAP;AACD;;AAEDE,EAAAA,oBAAoB,CAACF,KAAD,EAAiB;AACnC,SAAKC,MAAL,CAAYC,oBAAZ,GAAmCF,KAAnC;AACA,WAAO,IAAP;AACD;;AAjB6E","sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\r\nimport {\r\n  NativeViewGestureConfig,\r\n  NativeViewGestureHandlerPayload,\r\n} from '../NativeViewGestureHandler';\r\n\r\nexport class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {\r\n  public config: BaseGestureConfig & NativeViewGestureConfig = {};\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.handlerName = 'NativeViewGestureHandler';\r\n  }\r\n\r\n  shouldActivateOnStart(value: boolean) {\r\n    this.config.shouldActivateOnStart = value;\r\n    return this;\r\n  }\r\n\r\n  disallowInterruption(value: boolean) {\r\n    this.config.disallowInterruption = value;\r\n    return this;\r\n  }\r\n}\r\n\r\nexport type NativeGestureType = InstanceType<typeof NativeGesture>;\r\n"]}