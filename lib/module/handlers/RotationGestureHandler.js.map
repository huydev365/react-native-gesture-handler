{"version":3,"sources":["RotationGestureHandler.ts"],"names":["createHandler","baseGestureHandlerProps","rotationHandlerName","RotationGestureHandler","name","allowedProps","config"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,SAEEC,uBAFF,QAGO,wBAHP;AAmCA,OAAO,MAAMC,mBAAmB,GAAG,wBAA5B;AAGP;AACA,OAAO,MAAMC,sBAAsB,GAAGH,aAAa,CAGjD;AACAI,EAAAA,IAAI,EAAEF,mBADN;AAEAG,EAAAA,YAAY,EAAEJ,uBAFd;AAGAK,EAAAA,MAAM,EAAE;AAHR,CAHiD,CAA5C","sourcesContent":["import createHandler from './createHandler';\r\nimport {\r\n  BaseGestureHandlerProps,\r\n  baseGestureHandlerProps,\r\n} from './gestureHandlerCommon';\r\n\r\nexport type RotationGestureHandlerEventPayload = {\r\n  /**\r\n   * Amount rotated, expressed in radians, from the gesture's focal point\r\n   * (anchor).\r\n   */\r\n  rotation: number;\r\n\r\n  /**\r\n   * X coordinate, expressed in points, of the gesture's central focal point\r\n   * (anchor).\r\n   */\r\n  anchorX: number;\r\n\r\n  /**\r\n   * Y coordinate, expressed in points, of the gesture's central focal point\r\n   * (anchor).\r\n   */\r\n  anchorY: number;\r\n\r\n  /**\r\n   *\r\n   * Instantaneous velocity, expressed in point units per second, of the\r\n   * gesture.\r\n   */\r\n  velocity: number;\r\n};\r\n\r\nexport interface RotationGestureHandlerProps\r\n  extends BaseGestureHandlerProps<RotationGestureHandlerEventPayload> {}\r\n\r\nexport const rotationHandlerName = 'RotationGestureHandler';\r\n\r\nexport type RotationGestureHandler = typeof RotationGestureHandler;\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\r\nexport const RotationGestureHandler = createHandler<\r\n  RotationGestureHandlerProps,\r\n  RotationGestureHandlerEventPayload\r\n>({\r\n  name: rotationHandlerName,\r\n  allowedProps: baseGestureHandlerProps,\r\n  config: {},\r\n});\r\n"]}